worker_processes  auto;
worker_rlimit_nofile 8192;

events {
  worker_connections  8000;
}

http {
  # For logging purpose
  # access_log /var/log/nginx/access.log;
  # error_log  /var/log/nginx/error.log;

  # Contain all the mapping of file extensions with MIME types (Multipurpose Internet Mail Extensions) 
  include       mime.types;

  # Enable to use sendfile() system call for serving static files (js, css, img, etc)
  # Efficient static file serving
  sendfile        on;

  # Define how long connection will open after finish one req (avoid handshake connection again for single client)
  keepalive_timeout 40s;       # Keep connections alive for 40 seconds
  keepalive_requests 1000;     # Max number of requests per connection

  # Upstream contain the servers point to the variable (round robin)
  # In case of nginx running on container and backend running local then use (host.docker.internal)
  upstream backend-dash {  
    server localhost:8080;   # Backend server instance 
  }

  server {
    listen 80;

    location /socket.io/ {
      proxy_pass http://backend-dash/socket.io/;

      # Proxy version for socket connection
      proxy_http_version 1.1;

      # Upgrade Headers
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "Upgrade";
    }

    location /api/dashboard {
      proxy_pass http://backend-dash/backend/api/v1/platform;

      # Headers
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # No cache Headers 
      add_header Cache-Control no-cache;
      add_header Cache-Control no-store;
    }

  }
}